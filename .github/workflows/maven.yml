name: Maven TestNG CI

# Trigger the workflow on push and pull requests on the master branch
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up JDK 11 (based on your POM file configuration)
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'

    # Step 3: Install Chrome and dependencies
    - name: Install Chrome
      run: |
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
        sudo apt-get install -y \
          xvfb \
          libxss1 \
          libappindicator1 \
          libindicator7 \
          fonts-liberation \
          libnss3 \
          lsb-release \
          xdg-utils \
          libx11-xcb1 \
          libxcomposite1 \
          libxcursor1 \
          libxdamage1 \
          libxrandr2 \
          libgbm1 \
          libasound2 \
          libatk1.0-0 \
          libatk-bridge2.0-0 \
          libgtk-3-0 \
          libnspr4 \
          libx11-6

    # Step 4: Install ChromeDriver based on the installed Chrome version
    - name: Install ChromeDriver
      run: |
        CHROME_VERSION=$(google-chrome --version | grep -oP '\d+\.\d+\.\d+' | head -1)
        echo "Detected Chrome version: $CHROME_VERSION"
        
        CHROMEDRIVER_VERSION=$(curl -sS https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_VERSION)
        if [ -z "$CHROMEDRIVER_VERSION" ]; then
          echo "Could not determine ChromeDriver version for Chrome $CHROME_VERSION."
          exit 1
        fi
        echo "Using ChromeDriver version: $CHROMEDRIVER_VERSION"
        
        wget https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip
        unzip chromedriver_linux64.zip
        sudo mv chromedriver /usr/local/bin/
        sudo chmod +x /usr/local/bin/chromedriver

    # Step 5: Run tests with Maven (using xvfb for virtual display)
    - name: Run Maven tests with TestNG
      run: |
        xvfb-run --auto-servernum --server-args='-screen 0 1920x1080x24' mvn clean test

    # Step 6: Publish test report as an artifact
    - name: Upload Test Report
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-report
        path: target/surefire-reports/

    # Step 7: Display test results in the GitHub Actions UI
    - name: Display test results
      if: always()
      run: |
        cat target/surefire-reports/*.xml
